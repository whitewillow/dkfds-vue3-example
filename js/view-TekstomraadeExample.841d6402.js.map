{"version":3,"file":"js/view-TekstomraadeExample.841d6402.js","mappings":"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","sources":["webpack://example/./node_modules/dkfds-vue3/src/utils/validate-utils.ts","webpack://example/./src/views/Komponenter/TekstomraadeExample.vue?f801","webpack://example/./src/views/Komponenter/TekstomraadeExample.vue"],"sourcesContent":["import { FdsCheckboxItem } from '@/model/fds.model';\n\n/**\n * Loop through functions, first returning a string will be returned otherwise null if no errors\n * @param functions an array of validation methods\n * @returns string = error | null = no errors\n */\nexport function validateAllErrorMessage (...functions: Array<(x?: unknown) => string | null>) {\n  return (x: unknown) => {\n    const messages = functions.map((f) => f(x)).filter((msg) => msg);\n\n    if (messages && messages.length > 0) {\n      return messages[0];\n    }\n    return null;\n  };\n}\n\nexport function numberMax (max: number): (args: number) => string | null {\n  return (x: number) => (x <= max ? null : `Feltet må overstige ${max}.`);\n}\nexport function numberMin (min: number): (args: number) => string | null {\n  return (x: number) => (x > min ? null : `Feltet må ikke være mindre end ${min}.`);\n}\n\nexport function charactersMaxLength (length: number): (args: string) => string | null {\n  return (x: string) => (x.length <= length ? null : `Feltet må ikke være længere end ${length} tegn.`);\n}\n\nexport function charactersMinLength (length: number): (args: string) => string | null {\n  return (x: string) => (x.length >= length ? null : `Feltet må ikke være kortere end ${length} tegn.`);\n}\n\nexport function charactersEqualsLength (\n  length: number,\n  type = 'tegn',\n): (args: string) => string | null {\n  return (x) => (x.length === length ? null : `Feltet skal være nøjagtigt ${length} ${type}.`);\n}\n\nexport function validCVR (x: string): string | null {\n  const CVR_REGEXP = /^[1-9][0-9]{7}$/;\n  const isValid = CVR_REGEXP.test(x);\n\n  return isValid ? null : 'CVR nummer er ikke korrekt angivet';\n}\n\nexport function validCPR (x: string): string | null {\n  // eslint-disable-next-line max-len\n  const CPR_REGEXP = /((?:(?:31(?:0[13578]|1[02])|(?:30|29)(?:0[13-9]|1[0-2])|(?:0[1-9]|1[0-9]|2[0-8])(?:0[1-9]|1[0-2]))[0-9]{2}|2902(?:[02468][048]|[13579][26])))-?[0-9]{4}/;\n  const isValid = CPR_REGEXP.test(x);\n\n  return isValid ? null : 'CPR nummer er ikke korrekt angivet';\n}\n\nexport function validSagsnummer (x: string): string | null {\n  const regex = RegExp(\n    /^[AXB][0-9]{2}-[A-Z]{2}-[0-9]{2}-[A-Z]{2}(-[0-9]{2}$|-[0-9]{2}-[A-Z]{2})*$/,\n    'g',\n  );\n  const isValid = regex.test(x.toUpperCase());\n\n  return isValid ? null : 'Sagsnummer ikke korrekt angivet';\n}\n\nexport function hasContent (x: string): string | null {\n  return x !== null && x.replace(/\\s+/g, '').length > 0 ? null : 'Feltet må ikke være tomt.';\n}\n\nexport function validEmail (x: string): string | null {\n  const EMAIL_REGEXP = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\n  const isValid = EMAIL_REGEXP.test(x);\n\n  return isValid ? null : 'Email er ikke korrekt angivet';\n}\n\nexport function noSpace (x: string): string | null {\n  return x.indexOf(' ') !== -1 ? 'Feltet må ikke har mellemrum.' : null;\n}\n\nexport function notEmpty (...arg: string[]): boolean {\n  return arg.every((e) => e.trim().length > 0);\n}\n\nexport function arrayHasItems (x: unknown): string | null {\n  if (!Array.isArray(x)) {\n    return 'Ukendt indhold';\n  }\n  const a: Array<FdsCheckboxItem> = x as Array<FdsCheckboxItem>;\n  return a.some((s) => s.checked === true) ? null : 'Angiv venligst et valg';\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, unref as _unref, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Enkeltstående komponenter\", -1)\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" Efternavn \")\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Angive gyldig afgørelse\")\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Samlet komponent\", -1)\n\nimport { ref } from 'vue';\nimport { charactersMinLength, hasContent } from 'dkfds-vue3/src/utils/validate-utils';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'TekstomraadeExample',\n  setup(__props) {\n\nconst txtAfgorelse = ref('');\nconst txtBeskrivelse = ref('');\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_fds_label = _resolveComponent(\"fds-label\")!\n  const _component_fds_fejlmeddelelse = _resolveComponent(\"fds-fejlmeddelelse\")!\n  const _component_fds_hint = _resolveComponent(\"fds-hint\")!\n  const _component_fds_textarea = _resolveComponent(\"fds-textarea\")!\n  const _component_xfds_formgroup = _resolveComponent(\"xfds-formgroup\")!\n  const _component_xfds_validate = _resolveComponent(\"xfds-validate\")!\n  const _component_xfds_form_textarea = _resolveComponent(\"xfds-form-textarea\")!\n\n  return (_openBlock(), _createElementBlock(\"section\", null, [\n    _hoisted_1,\n    _createVNode(_component_xfds_validate, {\n      modelValue: txtAfgorelse.value,\n      validations: [_unref(hasContent), _unref(charactersMinLength)(10)]\n    }, {\n      default: _withCtx(({ isValid, errorMessage }) => [\n        _createVNode(_component_xfds_formgroup, { \"is-valid\": isValid }, {\n          default: _withCtx(({ formid }) => [\n            _createVNode(_component_fds_label, { id: formid }, {\n              default: _withCtx(() => [\n                _hoisted_2\n              ]),\n              _: 2\n            }, 1032, [\"id\"]),\n            (!isValid)\n              ? (_openBlock(), _createBlock(_component_fds_fejlmeddelelse, { key: 0 }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(errorMessage), 1)\n                  ]),\n                  _: 2\n                }, 1024))\n              : _createCommentVNode(\"\", true),\n            _createVNode(_component_fds_hint, null, {\n              default: _withCtx(() => [\n                _hoisted_3\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_fds_textarea, {\n              modelValue: txtAfgorelse.value,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((txtAfgorelse).value = $event)),\n              id: formid\n            }, null, 8, [\"modelValue\", \"id\"])\n          ]),\n          _: 2\n        }, 1032, [\"is-valid\"])\n      ]),\n      _: 1\n    }, 8, [\"modelValue\", \"validations\"]),\n    _hoisted_4,\n    _createVNode(_component_xfds_form_textarea, {\n      label: \"Tekst område\",\n      modelValue: txtBeskrivelse.value,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((txtBeskrivelse).value = $event)),\n      validations: [_unref(hasContent), _unref(charactersMinLength)(10)]\n    }, null, 8, [\"modelValue\", \"validations\"])\n  ]))\n}\n}\n\n})","import script from \"./TekstomraadeExample.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./TekstomraadeExample.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["numberMax","max","x","numberMin","min","charactersMinLength","length","hasContent","replace","arrayHasItems","Array","isArray","a","some","s","checked","_hoisted_1","_createElementVNode","_hoisted_2","_createTextVNode","_hoisted_3","_hoisted_4","_defineComponent","__name","setup","__props","txtAfgorelse","ref","txtBeskrivelse","_ctx","_cache","_component_fds_label","_resolveComponent","_component_fds_fejlmeddelelse","_component_fds_hint","_component_fds_textarea","_component_xfds_formgroup","_component_xfds_validate","_component_xfds_form_textarea","_openBlock","_createElementBlock","_createVNode","modelValue","value","validations","_unref","default","_withCtx","isValid","errorMessage","formid","id","_","_createCommentVNode","_createBlock","key","_toDisplayString","$event","label","__exports__"],"sourceRoot":""}