{"version":3,"file":"js/view-TjekboksListe.5a6f9466.js","mappings":"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","sources":["webpack://example/./node_modules/dkfds-vue3/src/utils/validate-utils.ts","webpack://example/./src/views/EkstraKomponenter/TjekboksListe.vue?7c88","webpack://example/./src/views/EkstraKomponenter/TjekboksListe.vue"],"sourcesContent":["import { FdsCheckboxItem } from '@/model/fds.model';\n\n/**\n * Loop through functions, first returning a string will be returned otherwise null if no errors\n * @param functions an array of validation methods\n * @returns string = error | null = no errors\n */\nexport function validateAllErrorMessage (...functions: Array<(x?: unknown) => string | null>) {\n  return (x: unknown) => {\n    const messages = functions.map((f) => f(x)).filter((msg) => msg);\n\n    if (messages && messages.length > 0) {\n      return messages[0];\n    }\n    return null;\n  };\n}\n\nexport function numberMax (max: number): (args: number) => string | null {\n  return (x: number) => (x <= max ? null : `Feltet må overstige ${max}.`);\n}\nexport function numberMin (min: number): (args: number) => string | null {\n  return (x: number) => (x > min ? null : `Feltet må ikke være mindre end ${min}.`);\n}\n\nexport function charactersMaxLength (length: number): (args: string) => string | null {\n  return (x: string) => (x.length <= length ? null : `Feltet må ikke være længere end ${length} tegn.`);\n}\n\nexport function charactersMinLength (length: number): (args: string) => string | null {\n  return (x: string) => (x.length >= length ? null : `Feltet må ikke være kortere end ${length} tegn.`);\n}\n\nexport function charactersEqualsLength (\n  length: number,\n  type = 'tegn',\n): (args: string) => string | null {\n  return (x) => (x.length === length ? null : `Feltet skal være nøjagtigt ${length} ${type}.`);\n}\n\nexport function validCVR (x: string): string | null {\n  const CVR_REGEXP = /^[1-9][0-9]{7}$/;\n  const isValid = CVR_REGEXP.test(x);\n\n  return isValid ? null : 'CVR nummer er ikke korrekt angivet';\n}\n\nexport function validCPR (x: string): string | null {\n  // eslint-disable-next-line max-len\n  const CPR_REGEXP = /((?:(?:31(?:0[13578]|1[02])|(?:30|29)(?:0[13-9]|1[0-2])|(?:0[1-9]|1[0-9]|2[0-8])(?:0[1-9]|1[0-2]))[0-9]{2}|2902(?:[02468][048]|[13579][26])))-?[0-9]{4}/;\n  const isValid = CPR_REGEXP.test(x);\n\n  return isValid ? null : 'CPR nummer er ikke korrekt angivet';\n}\n\nexport function validSagsnummer (x: string): string | null {\n  const regex = RegExp(\n    /^[AXB][0-9]{2}-[A-Z]{2}-[0-9]{2}-[A-Z]{2}(-[0-9]{2}$|-[0-9]{2}-[A-Z]{2})*$/,\n    'g',\n  );\n  const isValid = regex.test(x.toUpperCase());\n\n  return isValid ? null : 'Sagsnummer ikke korrekt angivet';\n}\n\nexport function hasContent (x: string): string | null {\n  return x !== null && x.replace(/\\s+/g, '').length > 0 ? null : 'Feltet må ikke være tomt.';\n}\n\nexport function validEmail (x: string): string | null {\n  const EMAIL_REGEXP = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\n  const isValid = EMAIL_REGEXP.test(x);\n\n  return isValid ? null : 'Email er ikke korrekt angivet';\n}\n\nexport function noSpace (x: string): string | null {\n  return x.indexOf(' ') !== -1 ? 'Feltet må ikke har mellemrum.' : null;\n}\n\nexport function notEmpty (...arg: string[]): boolean {\n  return arg.every((e) => e.trim().length > 0);\n}\n\nexport function arrayHasItems (x: unknown): string | null {\n  if (!Array.isArray(x)) {\n    return 'Ukendt indhold';\n  }\n  const a: Array<FdsCheckboxItem> = x as Array<FdsCheckboxItem>;\n  return a.some((s) => s.checked === true) ? null : 'Angiv venligst et valg';\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Det er muligt at benytte tjekboks til mere indhold\", -1)\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"italic\" }, [\n  /*#__PURE__*/_createElementVNode(\"code\", null, \"fds-checkbox-list\"),\n  /*#__PURE__*/_createTextVNode(\" Ud fra en liste af \"),\n  /*#__PURE__*/_createElementVNode(\"code\", null, \"FdsCheckboxItem[]\"),\n  /*#__PURE__*/_createTextVNode(\" genereres checkbox liste. \")\n], -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"italic\" }, [\n  /*#__PURE__*/_createTextVNode(\" Det er muligt at udfolde valgte checkbox og angive eget indhold, via dynamisk \"),\n  /*#__PURE__*/_createElementVNode(\"code\", null, \"slot\")\n], -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"hr\", { class: \"my-6\" }, null, -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"italic\" }, [\n  /*#__PURE__*/_createTextVNode(\" Komponenten \"),\n  /*#__PURE__*/_createElementVNode(\"code\", null, \"xfds-form-checkbox-list\"),\n  /*#__PURE__*/_createTextVNode(\" er en samling af komponenter der giver en samlet funktionalitet. \")\n], -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"italic\" }, \"Understøtter simpel validering, m.m.\", -1)\n\nimport { ref } from 'vue';\nimport { arrayHasItems } from 'dkfds-vue3/src/utils/validate-utils';\nimport { FdsCheckboxItem } from 'dkfds-vue3/src/model/fds.model';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'TjekboksListe',\n  setup(__props) {\n\nconst checkboxListForm = ref<FdsCheckboxItem[]>([\n  {\n    title: 'Banan',\n    value: 'banan',\n  },\n  {\n    title: 'Melon',\n    value: 'melon',\n  },\n  {\n    title: 'Æble',\n    value: 'æble',\n  },\n  {\n    title: 'Tomat',\n    value: 'tomat',\n    disabled: true,\n  },\n]);\n\nconst checkboxList = ref<FdsCheckboxItem[]>([\n  {\n    title: 'Banan',\n    value: 'banan',\n  },\n  {\n    title: 'Melon',\n    value: 'melon',\n  },\n  {\n    title: 'Æble',\n    value: 'æble',\n  },\n]);\n\nconst code = `\n  <xfds-form-checkbox-list\n    label=\"Checkbox form\"\n    :validations=\"[arrayHasItems]\"\n    v-model=\"checkboxListForm\"\n  />\n  \n  const checkboxListForm = ref<FdsCheckboxItem[]>([\n    {\n      title: 'Banan',\n      value: 'banan',\n    },\n    {\n      title: 'Melon',\n      value: 'melon',\n    },\n    {\n      title: 'Æble',\n      value: 'æble',\n    },\n    {\n      title: 'Tomat',\n      value: 'tomat',\n      disabled: true,\n    },\n  ]);`;\n\nconst codeList = `\n<fds-checkbox-list v-model=\"checkboxList\">\n  <template v-slot:[\\`melon\\`]>\n    <p>Det er muligt at benytte tjekboks til mere indhold</p>\n  </template>\n</fds-checkbox-list>\n`;\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_xfds_checkbox_list = _resolveComponent(\"xfds-checkbox-list\")!\n  const _component_fds_formgroup = _resolveComponent(\"fds-formgroup\")!\n  const _component_fds_pre = _resolveComponent(\"fds-pre\")!\n  const _component_fds_component_preview = _resolveComponent(\"fds-component-preview\")!\n  const _component_xfds_form_checkbox_list = _resolveComponent(\"xfds-form-checkbox-list\")!\n\n  return (_openBlock(), _createElementBlock(\"section\", null, [\n    _createVNode(_component_fds_component_preview, { header: \"Eksempel\" }, {\n      description: _withCtx(() => [\n        _hoisted_2,\n        _hoisted_3\n      ]),\n      code: _withCtx(() => [\n        _createElementVNode(\"pre\", { textContent: codeList })\n      ]),\n      default: _withCtx(() => [\n        _createVNode(_component_fds_formgroup, { label: \"Vælg en checkbox\" }, {\n          default: _withCtx(() => [\n            _createVNode(_component_xfds_checkbox_list, {\n              modelValue: checkboxList.value,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((checkboxList).value = $event))\n            }, {\n              [`melon`]: _withCtx(() => [\n                _hoisted_1\n              ]),\n              _: 2\n            }, 1032, [\"modelValue\"])\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_fds_pre, {\n          header: \"v-model\",\n          json: checkboxList.value\n        }, null, 8, [\"json\"])\n      ]),\n      _: 1\n    }),\n    _hoisted_4,\n    _createVNode(_component_fds_component_preview, { header: \"Eksempel Formular\" }, {\n      description: _withCtx(() => [\n        _hoisted_5,\n        _hoisted_6\n      ]),\n      code: _withCtx(() => [\n        _createElementVNode(\"pre\", { textContent: code })\n      ]),\n      default: _withCtx(() => [\n        _createVNode(_component_xfds_form_checkbox_list, {\n          label: \"Checkbox form\",\n          validations: [_unref(arrayHasItems)],\n          modelValue: checkboxListForm.value,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((checkboxListForm).value = $event))\n        }, null, 8, [\"validations\", \"modelValue\"]),\n        _createVNode(_component_fds_pre, {\n          header: \"v-model for checkbox liste\",\n          json: checkboxListForm.value\n        }, null, 8, [\"json\"])\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})","import script from \"./TjekboksListe.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./TjekboksListe.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["numberMin","min","x","charactersMinLength","length","hasContent","replace","arrayHasItems","Array","isArray","a","some","s","checked","_hoisted_1","_createElementVNode","_hoisted_2","class","_createTextVNode","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_defineComponent","__name","setup","__props","checkboxListForm","ref","title","value","disabled","checkboxList","code","codeList","_ctx","_cache","_component_xfds_checkbox_list","_resolveComponent","_component_fds_formgroup","_component_fds_pre","_component_fds_component_preview","_component_xfds_form_checkbox_list","_openBlock","_createElementBlock","_createVNode","header","description","_withCtx","textContent","default","label","modelValue","$event","_","json","validations","_unref","__exports__"],"sourceRoot":""}