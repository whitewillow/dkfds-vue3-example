{"version":3,"file":"js/view-TekstFelt.99e884ea.js","mappings":"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","sources":["webpack://example/./node_modules/dkfds-vue3/src/utils/validate-utils.ts","webpack://example/./src/views/EkstraKomponenter/TekstFelt.vue?f5fc","webpack://example/./src/views/EkstraKomponenter/TekstFelt.vue"],"sourcesContent":["import { FdsCheckboxItem } from '@/model/fds.model';\n\n/**\n * Loop through functions, first returning a string will be returned otherwise null if no errors\n * @param functions an array of validation methods\n * @returns string = error | null = no errors\n */\nexport function validateAllErrorMessage (...functions: Array<(x?: unknown) => string | null>) {\n  return (x: unknown) => {\n    const messages = functions.map((f) => f(x)).filter((msg) => msg !== null) as string[];\n\n    if (messages && messages.length > 0) {\n      return messages;\n    }\n    return [];\n  };\n}\n\nexport function numberMax (max: number): (args: number) => string | null {\n  return (x: number) => (x <= max ? null : `Feltet må overstige ${max}.`);\n}\nexport function numberMin (min: number): (args: number) => string | null {\n  return (x: number) => (x > min ? null : `Feltet må ikke være mindre end ${min}.`);\n}\n\nexport function charactersMaxLength (length: number): (args: string) => string | null {\n  return (x: string) => (x.length <= length ? null : `Feltet må ikke være længere end ${length} tegn.`);\n}\n\nexport function charactersMinLength (length: number): (args: string) => string | null {\n  return (x: string) => (x.length >= length ? null : `Feltet må ikke være kortere end ${length} tegn.`);\n}\n\nexport function charactersEqualsLength (\n  length: number,\n  type = 'tegn',\n): (args: string) => string | null {\n  return (x) => (x.length === length ? null : `Feltet skal være nøjagtigt ${length} ${type}.`);\n}\n\nexport function validCVR (x: string): string | null {\n  const CVR_REGEXP = /^[1-9][0-9]{7}$/;\n  const isValid = CVR_REGEXP.test(x);\n\n  return isValid ? null : 'CVR nummer er ikke korrekt angivet';\n}\n\nexport function validCPR (x: string): string | null {\n  // eslint-disable-next-line max-len\n  const CPR_REGEXP = /((?:(?:31(?:0[13578]|1[02])|(?:30|29)(?:0[13-9]|1[0-2])|(?:0[1-9]|1[0-9]|2[0-8])(?:0[1-9]|1[0-2]))[0-9]{2}|2902(?:[02468][048]|[13579][26])))-?[0-9]{4}/;\n  const isValid = CPR_REGEXP.test(x);\n\n  return isValid ? null : 'CPR nummer er ikke korrekt angivet';\n}\n\nexport function validSagsnummer (x: string): string | null {\n  const regex = RegExp(\n    /^[AXB][0-9]{2}-[A-Z]{2}-[0-9]{2}-[A-Z]{2}(-[0-9]{2}$|-[0-9]{2}-[A-Z]{2})*$/,\n    'g',\n  );\n  const isValid = regex.test(x.toUpperCase());\n\n  return isValid ? null : 'Sagsnummer ikke korrekt angivet';\n}\n\nexport function hasContent (x: string): string | null {\n  return x !== null && x.replace(/\\s+/g, '').length > 0 ? null : 'Feltet må ikke være tomt.';\n}\n\nexport function validEmail (x: string): string | null {\n  const EMAIL_REGEXP = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\n  const isValid = EMAIL_REGEXP.test(x);\n\n  return isValid ? null : 'Email er ikke korrekt angivet';\n}\n\nexport function noSpace (x: string): string | null {\n  return x.indexOf(' ') !== -1 ? 'Feltet må ikke har mellemrum.' : null;\n}\n\nexport function notEmpty (...arg: string[]): boolean {\n  return arg.every((e) => e.trim().length > 0);\n}\n\nexport function arrayHasItems (x: unknown): string | null {\n  if (!Array.isArray(x)) {\n    return 'Ukendt indhold';\n  }\n  const a: Array<FdsCheckboxItem> = x as Array<FdsCheckboxItem>;\n  return a.some((s) => s.checked === true) ? null : 'Angiv venligst et valg';\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, unref as _unref, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", { class: \"button button-search\" }, [\n  /*#__PURE__*/_createElementVNode(\"svg\", {\n    class: \"icon-svg m-0\",\n    \"aria-hidden\": \"true\"\n  }, [\n    /*#__PURE__*/_createElementVNode(\"use\", { \"xlink:href\": \"#search\" })\n  ]),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"sr-only\" }, \" Søg \")\n], -1)\n\nimport { ref } from 'vue';\nimport { charactersMinLength, hasContent } from 'dkfds-vue3/src/utils/validate-utils';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'TekstFelt',\n  setup(__props) {\n\nconst user = ref({\n  name: '',\n  adress: '',\n  city: '',\n  search: '',\n});\nconst code = `\n<xfds-form-input label=\"Navn\" placeholder=\"e.g: Anders Hansen\" v-model=\"user.name\" />\n\n<xfds-validate :modelValue=\"user.adress\" :validations=\"[hasContent, charactersMinLength(10)]\">\n  <xfds-form-input\n    label=\"Adresse\"\n    hint=\"Angiv gyldig adresse\"\n    tooltip=\"Input tooltip\"\n    input-type=\"street-address\"\n    autocomplete=\"street-address\"\n    placeholder=\"e.g: Jarlsvej 23\"\n    v-model=\"user.adress\"\n  />\n</xfds-validate>\n\n<xfds-form-input\n  inputClass=\"input-width-xs\"\n  hint=\"Prefix og Suffix er muligt\"\n  label=\"By\"\n  v-model=\"user.city\"\n  suffix=\"DK\"\n/>\n\n<xfds-form-input label=\"Søg\" v-model=\"user.search\">\n  <template #button>\n    <button class=\"button button-search\">\n      <svg class=\"icon-svg m-0\" aria-hidden=\"true\">\n        <use xlink:href=\"#search\"></use></svg\n      ><span class=\"sr-only\"> Søg </span>\n    </button>\n  </template>\n</xfds-form-input>\n`;\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_xfds_form_input = _resolveComponent(\"xfds-form-input\")!\n  const _component_xfds_validate = _resolveComponent(\"xfds-validate\")!\n  const _component_fds_pre = _resolveComponent(\"fds-pre\")!\n  const _component_fds_preview_item = _resolveComponent(\"fds-preview-item\")!\n  const _component_fds_preview_code = _resolveComponent(\"fds-preview-code\")!\n  const _component_fds_preview = _resolveComponent(\"fds-preview\")!\n\n  return (_openBlock(), _createElementBlock(\"section\", null, [\n    _createVNode(_component_fds_preview, { header: \"Tekstfelter\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_fds_preview_item, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_xfds_form_input, {\n              label: \"Navn\",\n              placeholder: \"e.g: Anders Hansen\",\n              modelValue: user.value.name,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((user.value.name) = $event))\n            }, null, 8, [\"modelValue\"]),\n            _createVNode(_component_xfds_validate, {\n              modelValue: user.value.adress,\n              validations: [_unref(hasContent), _unref(charactersMinLength)(10)]\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_xfds_form_input, {\n                  label: \"Adresse\",\n                  hint: \"Angiv gyldig adresse\",\n                  tooltip: \"Input tooltip\",\n                  \"input-type\": \"street-address\",\n                  autocomplete: \"street-address\",\n                  placeholder: \"e.g: Jarlsvej 23\",\n                  modelValue: user.value.adress,\n                  \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((user.value.adress) = $event))\n                }, null, 8, [\"modelValue\"])\n              ]),\n              _: 1\n            }, 8, [\"modelValue\", \"validations\"]),\n            _createVNode(_component_xfds_form_input, {\n              inputClass: \"input-width-xs\",\n              hint: \"Prefix og Suffix er muligt\",\n              label: \"By\",\n              modelValue: user.value.city,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((user.value.city) = $event)),\n              suffix: \"DK\"\n            }, null, 8, [\"modelValue\"]),\n            _createVNode(_component_xfds_form_input, {\n              label: \"Søg\",\n              modelValue: user.value.search,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((user.value.search) = $event))\n            }, {\n              button: _withCtx(() => [\n                _hoisted_1\n              ]),\n              _: 1\n            }, 8, [\"modelValue\"]),\n            _createVNode(_component_fds_pre, {\n              header: \"Object data\",\n              json: user.value\n            }, null, 8, [\"json\"])\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_fds_preview_code, null, {\n          default: _withCtx(() => [\n            _createElementVNode(\"pre\", { textContent: code })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})","import script from \"./TekstFelt.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./TekstFelt.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["numberMin","min","x","charactersMinLength","length","hasContent","replace","arrayHasItems","Array","isArray","a","some","s","checked","_hoisted_1","_createElementVNode","class","_defineComponent","__name","setup","__props","user","ref","name","adress","city","search","code","_ctx","_cache","_component_xfds_form_input","_resolveComponent","_component_xfds_validate","_component_fds_pre","_component_fds_preview_item","_component_fds_preview_code","_component_fds_preview","_openBlock","_createElementBlock","_createVNode","header","default","_withCtx","label","placeholder","modelValue","value","$event","validations","_unref","hint","tooltip","autocomplete","_","inputClass","suffix","button","json","textContent","__exports__"],"sourceRoot":""}