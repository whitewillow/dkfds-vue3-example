{"version":3,"file":"js/view-RadioKnap.b097cbdc.js","mappings":"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","sources":["webpack://example/./src/views/EkstraKomponenter/RadioKnap.vue?4fbf","webpack://example/./src/views/EkstraKomponenter/RadioKnap.vue"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Det er muligt at benytte radio til mere indhold\", -1)\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"hr\", { class: \"my-6\" }, null, -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Det er muligt at benytte radio til mere indhold\", -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"italic\" }, [\n  /*#__PURE__*/_createTextVNode(\" Er det kun ja eller nej - sand eller falsk, kan \"),\n  /*#__PURE__*/_createElementVNode(\"code\", null, \"xfds-radio-toggle\"),\n  /*#__PURE__*/_createTextVNode(\" benyttes. \")\n], -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"italic\" }, [\n  /*#__PURE__*/_createTextVNode(\" Det er muligt at udfolde valgte radio og angive eget indhold, via dynamisk \"),\n  /*#__PURE__*/_createElementVNode(\"code\", null, \"slot\")\n], -1)\n\nimport { FdsOptionItem } from 'dkfds-vue3/src/model/fds.model';\nimport { ref } from 'vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'RadioKnap',\n  setup(__props) {\n\nconst radioVal = ref('');\n\nconst toggleRadio = ref(null);\nconst radioOptions = ref<FdsOptionItem[]>([\n  {\n    title: 'Banan',\n    value: 'banan',\n  },\n  {\n    title: 'Melon',\n    value: 'melon',\n  },\n  {\n    title: 'Æble',\n    value: 'æble',\n  },\n]);\n\nconst code = `\n<xfds-radio header=\"Pick one\" :list=\"radioOptions\" v-model=\"radioVal\" label=\"Vælg radio\">\n  <template v-slot:[\\`melon\\`]>\n    <p>Det er muligt at benytte radio til mere indhold</p>\n  </template>\n</xfds-radio>\n\nconst radioOptions = ref<FdsOptionItem[]>([\n  {\n    title: 'Banan',\n    value: 'banan',\n  },\n  {\n    title: 'Melon',\n    value: 'melon',\n  },\n  {\n    title: 'Æble',\n    value: 'æble',\n  },\n]);\n`;\n\nconst code2 = `\n<xfds-radio-toggle v-model=\"toggleRadio\" label=\"Vælg radio toggle\">\n  <template v-slot:[\\`true\\`]>\n    <p>Det er muligt at benytte radio til mere indhold</p>\n  </template>\n</xfds-radio-toggle>\n`;\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_xfds_radio = _resolveComponent(\"xfds-radio\")!\n  const _component_fds_formgroup = _resolveComponent(\"fds-formgroup\")!\n  const _component_fds_pre = _resolveComponent(\"fds-pre\")!\n  const _component_fds_preview_item = _resolveComponent(\"fds-preview-item\")!\n  const _component_fds_preview_code = _resolveComponent(\"fds-preview-code\")!\n  const _component_fds_preview = _resolveComponent(\"fds-preview\")!\n  const _component_xfds_radio_toggle = _resolveComponent(\"xfds-radio-toggle\")!\n\n  return (_openBlock(), _createElementBlock(\"section\", null, [\n    _createVNode(_component_fds_preview, { header: \"Eksempel\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_fds_preview_item, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_fds_formgroup, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_xfds_radio, {\n                  header: \"Pick one\",\n                  list: radioOptions.value,\n                  modelValue: radioVal.value,\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((radioVal).value = $event)),\n                  label: \"Vælg radio\"\n                }, {\n                  [`melon`]: _withCtx(() => [\n                    _hoisted_1\n                  ]),\n                  _: 2\n                }, 1032, [\"list\", \"modelValue\"])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_fds_pre, {\n              header: \"v-model\",\n              json: { radioVal: radioVal.value }\n            }, null, 8, [\"json\"])\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_fds_preview_code, null, {\n          default: _withCtx(() => [\n            _createElementVNode(\"pre\", { textContent: code })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _hoisted_2,\n    _createVNode(_component_fds_preview, { header: \"Ja eller nej\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_fds_preview_item, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_fds_formgroup, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_xfds_radio_toggle, {\n                  modelValue: toggleRadio.value,\n                  \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((toggleRadio).value = $event)),\n                  label: \"Vælg radio toggle\"\n                }, {\n                  [`true`]: _withCtx(() => [\n                    _hoisted_3\n                  ]),\n                  _: 2\n                }, 1032, [\"modelValue\"])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_fds_pre, {\n              header: \"v-model\",\n              json: { toggleRadio: toggleRadio.value }\n            }, null, 8, [\"json\"])\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_fds_preview_item, null, {\n          default: _withCtx(() => [\n            _hoisted_4,\n            _hoisted_5\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_fds_preview_code, null, {\n          default: _withCtx(() => [\n            _createElementVNode(\"pre\", { textContent: code2 })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})","import script from \"./RadioKnap.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./RadioKnap.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_hoisted_1","_createElementVNode","_hoisted_2","class","_hoisted_3","_hoisted_4","_createTextVNode","_hoisted_5","_defineComponent","__name","setup","__props","radioVal","ref","toggleRadio","radioOptions","title","value","code","code2","_ctx","_cache","_component_xfds_radio","_resolveComponent","_component_fds_formgroup","_component_fds_pre","_component_fds_preview_item","_component_fds_preview_code","_component_fds_preview","_component_xfds_radio_toggle","_openBlock","_createElementBlock","_createVNode","header","default","_withCtx","list","modelValue","$event","label","_","json","textContent","__exports__"],"sourceRoot":""}