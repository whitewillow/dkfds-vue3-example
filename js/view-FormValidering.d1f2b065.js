"use strict";(self["webpackChunkexample"]=self["webpackChunkexample"]||[]).push([[1844],{3604:function(e,n,l){function t(e){return n=>n>e?null:`Feltet må ikke være mindre end ${e}.`}function r(e){return n=>n.length>=e?null:`Feltet må ikke være kortere end ${e} tegn.`}function a(e){return null!==e&&e.replace(/\s+/g,"").length>0?null:"Feltet må ikke være tomt."}function d(e){if(!Array.isArray(e))return"Ukendt indhold";const n=e;return n.some((e=>!0===e.checked))?null:"Angiv venligst et valg"}l.d(n,{QA:function(){return r},_M:function(){return d},rY:function(){return t},v3:function(){return a}})},8083:function(e,n,l){l.r(n),l.d(n,{default:function(){return $}});var t=l(3396),r=l(4870),a=l(7139),d=l(3604);const s=(0,t.Uk)(" Navn "),i=(0,t.Uk)("Indtast navn"),u=(0,t._)("h2",null,"Validering komponent",-1),o={class:"col-10"},m=(0,t.Uk)("modelValue"),f=(0,t._)("code",null,"string, number, array",-1),c=(0,t.Uk)(" tager imod "),k=(0,t._)("code",null,"string, number, array",-1),v=(0,t.Uk)("validations"),p=(0,t._)("code",null,"Array'<'(x?: unknown) => string | null'>'",-1),g=(0,t.Uk)(" et array af valideringsmetoder "),h=(0,t.Uk)("dirty"),_=(0,t._)("code",null,"Boolean",-1),w=(0,t.Uk)(" Om feltet er blevet berørt "),U=(0,t.Uk)(" Eksponering af resultatet, om modelValue er validt "),V=(0,t._)("code",null,"isValid",-1),y=(0,t.Uk)(" og evt. tilhørende fejlbesked "),b=(0,t._)("code",null,"errorMessage",-1),x=(0,t._)("h2",null,"Validerings metoder",-1),W=(0,t._)("p",null,[(0,t.Uk)("Konceptet er at hvis der returneres en fejlbesked "),(0,t._)("code",null,"string"),(0,t.Uk)(" så er der fejl")],-1),j=(0,t._)("p",null,[(0,t.Uk)("returneres der "),(0,t._)("code",null,"null"),(0,t.Uk)(" er modelValue valid")],-1),M=(0,t._)("p",{class:"italic"},[(0,t.Uk)("Komponenten "),(0,t._)("code",null,"xfds-validate"),(0,t.Uk)(" er en valideringswrapper.")],-1),A=(0,t._)("p",{class:"italic"}," Kan evt bruge til at lave egne komponenter der wrapper eksempelvis ovenstående i sin egen validarings-komponent ",-1),C=(0,t._)("p",{class:"italic"},[(0,t.Uk)(" Komponenten "),(0,t._)("code",null,"fds-input"),(0,t.Uk)(" kan udskiftes med egne komponenter eller eg: "),(0,t._)("code",null,"fds-input-number"),(0,t.Uk)(" m.m. ")],-1);var F=(0,t.aZ)({__name:"FormValidering",setup(e){const n=(0,r.iH)({name:"",adress:"",city:"",search:""}),l=(0,r.iH)(!1),F="\n  export function charactersMinLength (length: number): (args: string) => string | null {\n    return (x: string) => \n      (x.length >= length ? null : `Feltet må ikke være kortere end ${length} tegn.`);\n  }",K="\n  export function hasContent (x: string): string | null {\n    return x !== null && x.replace(/\\s+/g, '').length > 0 ? null : 'Feltet må ikke være tomt.';\n  }",$='\n  <xfds-validate\n    :modelValue="user.name"\n    :dirty="dirty"\n    :validations="[hasContent, charactersMinLength(10)]"\n    #default="{ isValid, errorMessage }"\n  >\n  ...\n  </xfds-validate>\n  ',L='\n  <xfds-validate\n    :modelValue="user.name"\n    :dirty="dirty"\n    :validations="[hasContent, charactersMinLength(10)]"\n    #default="{ isValid, errorMessage }"\n  >\n    <fds-formgroup :is-valid="isValid" >\n      <fds-label> Navn </fds-label>\n      <fds-fejlmeddelelse v-if="!isValid">\n        {{ errorMessage }}\n      </fds-fejlmeddelelse>\n      <fds-hint>Indtast navn</fds-hint>\n      <fds-input v-model="user.name" @dirty="dirty = $event"></fds-input>\n    </fds-formgroup>\n  </xfds-validate>\n  ';return(e,D)=>{const E=(0,t.up)("fds-label"),H=(0,t.up)("fds-fejlmeddelelse"),I=(0,t.up)("fds-hint"),N=(0,t.up)("fds-input"),Q=(0,t.up)("fds-formgroup"),S=(0,t.up)("xfds-validate"),q=(0,t.up)("fds-pre"),z=(0,t.up)("fds-strukturerede-liste"),B=(0,t.up)("fds-component-preview");return(0,t.wg)(),(0,t.iD)("section",null,[(0,t.Wm)(B,{header:"Eksempel"},{description:(0,t.w5)((()=>[M,A,C])),code:(0,t.w5)((()=>[(0,t._)("pre",{textContent:L})])),default:(0,t.w5)((()=>[(0,t.Wm)(S,{modelValue:n.value.name,dirty:l.value,validations:[(0,r.SU)(d.v3),(0,r.SU)(d.QA)(10)]},{default:(0,t.w5)((({isValid:e,errorMessage:r})=>[(0,t.Wm)(Q,{"is-valid":e},{default:(0,t.w5)((()=>[(0,t.Wm)(E,null,{default:(0,t.w5)((()=>[s])),_:1}),e?(0,t.kq)("",!0):((0,t.wg)(),(0,t.j4)(H,{key:0},{default:(0,t.w5)((()=>[(0,t.Uk)((0,a.zw)(r),1)])),_:2},1024)),(0,t.Wm)(I,null,{default:(0,t.w5)((()=>[i])),_:1}),(0,t.Wm)(N,{modelValue:n.value.name,"onUpdate:modelValue":D[0]||(D[0]=e=>n.value.name=e),onDirty:D[1]||(D[1]=e=>l.value=e)},null,8,["modelValue"])])),_:2},1032,["is-valid"])])),_:1},8,["modelValue","dirty","validations"]),(0,t.Wm)(q,{header:"object data",json:n.value},null,8,["json"]),u,(0,t._)("div",o,[(0,t.Wm)(z,{header:"modelValue"},{header:(0,t.w5)((()=>[(0,t.Wm)(E,{class:"d-block"},{default:(0,t.w5)((()=>[m])),_:1}),f])),default:(0,t.w5)((()=>[c,k])),_:1}),(0,t.Wm)(z,{header:"validations"},{header:(0,t.w5)((()=>[(0,t.Wm)(E,{class:"d-block"},{default:(0,t.w5)((()=>[v])),_:1}),p])),default:(0,t.w5)((()=>[g])),_:1}),(0,t.Wm)(z,{header:"dirty"},{header:(0,t.w5)((()=>[(0,t.Wm)(E,{class:"d-block"},{default:(0,t.w5)((()=>[h])),_:1}),_])),default:(0,t.w5)((()=>[w])),_:1}),(0,t.Wm)(z,{header:'#default="{ isValid, errorMessage }"'},{default:(0,t.w5)((()=>[U,V,y,b])),_:1})]),(0,t.Wm)(q,{header:"properties",code:$}),x,W,j,(0,t.Wm)(q,{header:"eks på valideringsmetode",code:F}),(0,t.Wm)(q,{header:"eks på valideringsmetode",code:K})])),_:1})])}}});const K=F;var $=K}}]);
//# sourceMappingURL=view-FormValidering.d1f2b065.js.map